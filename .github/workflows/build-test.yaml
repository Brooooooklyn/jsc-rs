name: Build and test

on:
  push:
    branches: [main]
    tags-ignore:
      - '**'
  pull_request:
    
env:
  MACOSX_DEPLOYMENT_TARGET: '10.15'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            docker: ghcr.io/brooooooklyn/jsc-rs/linux-builder:x64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.settings.os }}
    name: Build ${{ matrix.settings.target }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.os.target }}
          toolchain: stable
        if: ${{ !matrix.settings.docker }}

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache/
            target
          key: ${{ matrix.settings.target }}-cargo-cache

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest
        if: matrix.settings.os == 'macos-latest'

      - name: Download static release
        run: |
          cargo xtask download --target ${{ matrix.settings.target }}
          ls -R WebKit
          ls -R icu
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build JavaScriptCore
        if: matrix.settings.os == 'macos-latest'
        run: |
          cargo build --bin tyr --release
          cp target/release/tyr ./tyr-bin

      - name: Build JavaScriptCore
        if: matrix.settings.os == 'windows-latest'
        run: |
          cargo build --bin tyr --release
          cp target/release/tyr.exe ./tyr-bin.exe

      - name: Build JavaScriptCore in docker
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: '--user 0:0 -e GITHUB_TOKEN -v ${{ github.workspace }}/.cargo-cache/registry/index:/usr/local/cargo/registry/index -v ${{ github.workspace }}/.cargo-cache/registry/cache:/usr/local/cargo/cache -v ${{ github.workspace }}/.cargo-cache/git/db:/usr/local/cargo/git/db -v ${{ github.workspace }}:/build -w /build'
          run: >-
            rustup toolchain install $(cat ./rust-toolchain) &&
            rustup target add x86_64-unknown-linux-gnu &&
            cargo build --bin tyr --release &&
            cp target/${{ matrix.settings.target }}/release/tyr ./tyr-bin
